<?xml version="1.0"?>
<!--
  Xamyab common bringup.  Starts ur driver nodes and robot state
  publisher (translates joint positions to propper tfs).

  Usage:
    xamyab_ur_common.launch left_robot_ip:=<value> left_reverse_port:=<value>
    right_robot_ip:=<value> right_reverse_port:=<value>
-->
<launch>
  <!-- robot_ip: IP-address of the robot's socket-messaging server -->
  <arg name="left_robot_ip" default="10.42.0.54"/>
  <arg name="left_reverse_port" default="50001"/>
  <arg name="right_robot_ip" default="10.42.1.175"/>
  <arg name="right_reverse_port" default="50002"/>
  <arg name="min_payload" />
  <arg name="max_payload" />
  <arg name="left_prefix" default="left_" />
  <arg name="right_prefix" default="right_" />
  <arg name="use_ros_control" default="false"/>
  <arg name="use_lowbandwidth_trajectory_follower" default="true"/>
  <arg name="time_interval" default="0.008"/>
  <arg name="servoj_time" default="0.008" />
  <arg name="servoj_time_waiting" default="0.001" />
  <arg name="max_waiting_time" default="2.0" />
  <arg name="servoj_gain" default="100." />
  <arg name="servoj_lookahead_time" default="1." />
  <arg name="max_joint_difference" default="0.01" />
  <arg name="base_frame" default="$(arg left_prefix)base" />
  <arg name="tool_frame" default="$(arg left_prefix)tool0_controller" />
  <arg name="shutdown_on_disconnect" default="true" />

  <!-- require_activation defines when the service /ur_driver/robot_enable needs to be called. -->
  <arg name="require_activation" default="Never" /> <!-- Never, Always, OnStartup -->

  <!-- The max_velocity parameter is only used for debugging in the ur_driver. It's not related to actual velocity limits -->
  <arg name="max_velocity" default="10.0"/> <!-- [rad/s] -->

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- left arm driver -->
  <node name="left_ur_driver" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" ns="$(arg left_prefix)arm">
  <!-- copy the specified IP address to be consistant with ROS-Industrial spec. -->
    <param name="prefix" type="str" value="$(arg left_prefix)" />
    <param name="robot_ip_address" type="str" value="$(arg left_robot_ip)" />
    <param name="reverse_port" type="int" value="$(arg left_reverse_port)" />
    <param name="use_ros_control" type="bool" value="$(arg use_ros_control)"/>
    <param name="use_lowbandwidth_trajectory_follower" type="bool" value="$(arg use_lowbandwidth_trajectory_follower)"/>
    <param name="min_payload" type="double" value="$(arg min_payload)" />
    <param name="max_payload" type="double" value="$(arg max_payload)" />
    <param name="max_velocity" type="double" value="$(arg max_velocity)" />
    <param name="time_interval" type="double" value="$(arg time_interval)" />
    <param name="servoj_time" type="double" value="$(arg servoj_time)" />
    <param name="servoj_time_waiting" type="double" value="$(arg servoj_time_waiting)" />
    <param name="max_waiting_time" type="double" value="$(arg max_waiting_time)" />
    <param name="servoj_gain" type="double" value="$(arg servoj_gain)" />
    <param name="servoj_lookahead_time" type="double" value="$(arg servoj_lookahead_time)" />
    <param name="max_joint_difference" type="double" value="$(arg max_joint_difference)" />
    <param name="base_frame" type="str" value="$(arg left_prefix)base"/>
    <param name="tool_frame" type="str" value="$(arg left_prefix)tool0_controller"/>
    <param name="require_activation" type="str" value="$(arg require_activation)" />
    <param name="shutdown_on_disconnect" type="bool" value="$(arg shutdown_on_disconnect)"/>
  </node>

  <!-- right arm driver -->
  <node name="right_ur_driver" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" ns="$(arg right_prefix)arm">
  <!-- copy the specified IP address to be consistant with ROS-Industrial spec. -->
    <param name="prefix" type="str" value="$(arg right_prefix)" />
    <param name="robot_ip_address" type="str" value="$(arg right_robot_ip)" />
    <param name="reverse_port" type="int" value="$(arg right_reverse_port)" />
    <param name="use_ros_control" type="bool" value="$(arg use_ros_control)"/>
    <param name="use_lowbandwidth_trajectory_follower" type="bool" value="$(arg use_lowbandwidth_trajectory_follower)"/>
    <param name="min_payload" type="double" value="$(arg min_payload)" />
    <param name="max_payload" type="double" value="$(arg max_payload)" />
    <param name="max_velocity" type="double" value="$(arg max_velocity)" />
    <param name="time_interval" type="double" value="$(arg time_interval)" />
    <param name="servoj_time" type="double" value="$(arg servoj_time)" />
    <param name="servoj_time_waiting" type="double" value="$(arg servoj_time_waiting)" />
    <param name="max_waiting_time" type="double" value="$(arg max_waiting_time)" />
    <param name="servoj_gain" type="double" value="$(arg servoj_gain)" />
    <param name="servoj_lookahead_time" type="double" value="$(arg servoj_lookahead_time)" />
    <param name="max_joint_difference" type="double" value="$(arg max_joint_difference)" />
    <param name="base_frame" type="str" value="$(arg right_prefix)base"/>
    <param name="tool_frame" type="str" value="$(arg right_prefix)tool0_controller"/>
    <param name="require_activation" type="str" value="$(arg require_activation)" />
    <param name="shutdown_on_disconnect" type="bool" value="$(arg shutdown_on_disconnect)"/>
  </node>

  <!-- python script to combine left arm and right arm's joint states-->
  <node name="dual_arms_combined_jointstates" pkg="hiro_core" type="dual_arms_combined_jointstates.py" output="screen"/>
</launch>